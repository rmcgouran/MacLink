const { ipcRenderer } = require('electron');

// Populate the network interfaces dropdown
ipcRenderer.invoke('get-interfaces').then((interfaces) => {
  const select = document.getElementById('interfaces');
  interfaces.forEach((iface) => {
    const option = document.createElement('option');
    option.value = iface.name;
    option.textContent = iface.name;
    select.appendChild(option);
  });
});

document.getElementById('get-link-data').addEventListener('click', () => {
  const iface = document.getElementById('interfaces').value;

  Promise.all([
    ipcRenderer.invoke('run-lldpctl', iface),
    ipcRenderer.invoke('run-cdpr', iface)
  ]).then((results) => {
    const [lldpctlOutput, cdprOutput] = results;
    document.getElementById('output').textContent = `LLDPCTL Output:\n${lldpctlOutput}\n\nCDPR Output:\n${cdprOutput}`;
  }).catch((error) => {
    document.getElementById('output').textContent = `Error: ${error}`;
  });
});